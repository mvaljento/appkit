import P from"@walletconnect/sign-client";import{Web3Modal as x}from"@web3modal/standalone";var I=Object.defineProperty,C=Object.defineProperties,U=Object.getOwnPropertyDescriptors,O=Object.getOwnPropertySymbols,q=Object.prototype.hasOwnProperty,A=Object.prototype.propertyIsEnumerable,W=(s,t,a)=>t in s?I(s,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):s[t]=a,D=(s,t)=>{for(var a in t||(t={}))q.call(t,a)&&W(s,a,t[a]);if(O)for(var a of O(t))A.call(t,a)&&W(s,a,t[a]);return s},N=(s,t)=>C(s,U(t)),b=(s,t,a)=>{if(!t.has(s))throw TypeError("Cannot "+a)},e=(s,t,a)=>(b(s,t,"read from private field"),a?a.call(s):t.get(s)),h=(s,t,a)=>{if(t.has(s))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(s):t.set(s,a)},y=(s,t,a,d)=>(b(s,t,"write to private field"),d?d.call(s,a):t.set(s,a),a),n=(s,t,a)=>(b(s,t,"access private method"),a),l,p,w,i,u,k,o,r,m,g;class z{constructor(t){h(this,u),h(this,o),h(this,m),h(this,l,void 0),h(this,p,void 0),h(this,w,void 0),h(this,i,void 0),y(this,l,t),n(this,u,k).call(this),n(this,o,r).call(this)}async connect(t){const{requiredNamespaces:a,optionalNamespaces:d}=t;return new Promise(async(M,S)=>{await n(this,o,r).call(this);const j=e(this,p).subscribeModal(c=>{c.open||(j(),S(new Error("Modal closed")))}),{uri:E,approval:_}=await e(this,i).connect(t);if(E){const c=new Set;a&&Object.values(a).forEach(({chains:f})=>{f&&f.forEach(v=>c.add(v))}),d&&Object.values(d).forEach(({chains:f})=>{f&&f.forEach(v=>c.add(v))}),await e(this,p).openModal({uri:E,standaloneChains:Array.from(c)})}try{const c=await _();M(c)}catch(c){S(c)}finally{j(),e(this,p).closeModal()}})}async disconnect(t){await n(this,o,r).call(this),await e(this,i).disconnect(t)}async request(t){return await n(this,o,r).call(this),await e(this,i).request(t)}async getSessions(){return await n(this,o,r).call(this),e(this,i).session.getAll()}async getSession(){return await n(this,o,r).call(this),e(this,i).session.getAll().at(-1)}async onSessionEvent(t){await n(this,o,r).call(this),e(this,i).on("session_event",t)}async offSessionEvent(t){await n(this,o,r).call(this),e(this,i).off("session_event",t)}async onSessionUpdate(t){await n(this,o,r).call(this),e(this,i).on("session_update",t)}async offSessionUpdate(t){await n(this,o,r).call(this),e(this,i).off("session_update",t)}async onSessionDelete(t){await n(this,o,r).call(this),e(this,i).on("session_delete",t)}async offSessionDelete(t){await n(this,o,r).call(this),e(this,i).off("session_delete",t)}async onSessionExpire(t){await n(this,o,r).call(this),e(this,i).on("session_expire",t)}async offSessionExpire(t){await n(this,o,r).call(this),e(this,i).off("session_expire",t)}}l=new WeakMap,p=new WeakMap,w=new WeakMap,i=new WeakMap,u=new WeakSet,k=function(){const{modalOptions:s,projectId:t}=e(this,l);y(this,p,new x(N(D({},s),{walletConnectVersion:2,projectId:t})))},o=new WeakSet,r=async function(){return e(this,i)?!0:(!e(this,w)&&typeof window<"u"&&y(this,w,n(this,m,g).call(this)),e(this,w))},m=new WeakSet,g=async function(){y(this,i,await P.init({metadata:e(this,l).metadata,projectId:e(this,l).projectId,relayUrl:e(this,l).relayUrl}))};export{z as Web3ModalSign};
